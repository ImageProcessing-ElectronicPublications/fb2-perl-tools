
=head1 NAME 

RTF::HTML::Converter - модуль перекодировки из rtf в html.

=head1 SYNOPSIS

 use RTF::HTML::Converter;


 my $cnv = new RTF::HTML::Converter
  (
   StrictInputCharset=>'cp1251',
   ImageDir => 'img',
   ImageUrl => '/stat/images',
  );

  $cnv->parse_stream('infile.rtf');

  $cnv->parse_string('{\rtf0\ansi {\fonttbl .... \plain\f0\fs20\par\sect}');

  open F, $fname;
  @ar = <F>;
  $cnv->parse_array(\@ar);


 my %a = $cnv->files2convert();

 while (my($k, $v) = each %a) {
  printf "%20s %5s -> %5s\n", $k, @$v;
 }

=head1 DESCRIPTION

Модуль предоставляет объект типа RTF::HTML::Converter предназначенный для
перекодировки rtf-текста в html-текст. Входной rtf текст может вводиться
из файла, и из перловской строки и из массива строк. При перекодировке поддерживается
работа как с различными codepage (заданными \ansicpg), так и символами unicode.

Входной rtf текст может содержать картинки, при этом в процессе конвертации
в указанный пользователем каталог будут выводиться файлы, содержащие данные картинок,
а после конвертации можно получить данные для некоторой внешней, по отношению
к данному модулю, программы конвертации этих файлов в "сетевые" форматы (gif, jpg, png).

=head2 new RTF::HTML::Converter (args...)

Конструктор класса. Аргумент - хеш, ключи и возможные значения которого описаны далее.

=over

=item Output

Умолчание - \*STDOUT, ссылка на filehandle, в который будет производиться
вывод сконвертированного текста. Также может быть ссылкой на скаляр или на массив.
В этом случае выходной текст будет помещаться в строку или в массив строк.

=item InputCharset

Умолчание - cp1251. Принять такую кодировку во входном тексте, если не встретится
явно заданная \ansicpgN. Допустимые значения этой опции, а также StrictInputCharset
и OutputCharset именно те, которые воспринимает модуль Unicode::Map8.

=item StrictInputCharset

Если задана эта опция, то независимо от наличия / отстутствия во входном тексте
\ansicpgN входная кодировка принимается именно указанной.

=item OutputCharset

Кодировка выходного html текста.

=item ImageDir

Умолчание - '.', текущий каталог. Относительное или абсолютное имя каталога
(без завершающего слэша), в который будут выкладываться графические файлы.
Если эта опция равна B<NONE>, то файлы картинок выгружаться не будут
и теги <img ...> в выходном тексте выводится не будут.

=item ImageUrl

Умолчание - '.'. Начальная часть url (без завершающего слэша), 
которой будет предваряться имя
выгруженного файла в тегах <img src="">

=item ShowInfo

Умолчание - 0. Опция определяет - выводить ли в конце сгенерированного html-документа
информацию об авторе, дате создания и пр.

=back

=head2 $conv->parse_stream($fname)

Метод класса RTF::HTML::Converter. 
Аргумент - имя файла или указатель на (доступный по чтению)
filehandle. Выполняется конвертация текста, содержащегося в этом файле.

=head2 $conv->parse_string($s)

Метод класса RTF::HTML::Converter. Аргумент - строка, содержащая rtf текст.

=head2 $conv->parse_array(\@a)

Метод класса RTF::HTML::Converter. Аргумент - ссылка на массив,
содержащий строки входного rtf текста.

=head2 $conv->files2convert()

Метод класса RTF::HTML::Converter. Выдает информацию о графических
файлах, нуждающихся в преобразовании типов. Результат метода -
хэш, ключи в котором - реальные имена сгенерированных при конвертации
графических файлов, а значения - ссылки на списки из двух элементов: из какого
формата и в какой формат надо преобразоввывать файлы. В частности фрагмент
программы, приведенный выше мог бы дать примерно такой результат:

 ***************
     img/76543-0.wmf   wmf ->   gif
     img/76543-1.wmf   wmf ->   gif
     img/76543-2.wmf   wmf ->   gif
